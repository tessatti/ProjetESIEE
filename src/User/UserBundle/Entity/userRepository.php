<?php

namespace User\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * userRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class userRepository extends EntityRepository
{
  	  public function search_users($user_search)
  {
	  $qb = $this->createQueryBuilder('u');

	  $qb->where('u.firstname LIKE :keyword')
	  	 ->orWhere('u.lastname LIKE :keyword')
		 ->orWhere('u.email LIKE :keyword')
		 ->setParameter('keyword', '%'.$user_search.'%');
		 
	  return $qb->getQuery()
				->getResult();
  }
  
  public function signin_user($email, $password)
  {
	  $qb = $this->_em->createQueryBuilder();

	  $qb->select('u.firstname, u.lastname, u.id, u.email, u.date')
		 ->from('UserUserBundle:user', 'u')
		 ->where('u.email = :email')
		 ->setParameter('email', $email)
		 ->andWhere('u.password = :password')
		 ->setParameter('password', $password);

		return $qb;
  }
  public function check_if_friends($user)
  {
		  $qb = $this->_em->createQueryBuilder();

	  $qb->select('f')
		 ->from('UserUserBundle:friends', 'f')
		 ->where('f.user1 = :user1')
		 ->setParameter('user1', $user);
		 // ->andWhere('f.user2 = :user2')
		 //->setParameter('user2', $user1);
		 // ->orWhere('f.user1 = :user3')
		 // ->setParameter('user3', $user2)
		 // ->andWhere('f.user2 = :user4')
		 // ->setParameter('user4', $user1);

		return $qb->getQuery()
				  ->getResult();
  }
  
  public function load_notifications($user_to)
  {
    $query = $this->getEntityManager()
        ->createQuery('
			SELECT u.id, u.firstname, u.lastname, u.email, n.type, n.datetime, n.id as not_id
			FROM UserUserBundle:user u
			INNER JOIN UserUserBundle:notifications n WHERE u.id = n.user_from
			WHERE n.user_to = :user_to'
        )->setParameter('user_to', $user_to);

    try {
        return $query->getResult();
    } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
    }
  }
}
